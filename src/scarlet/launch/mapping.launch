<?xml version="1.0" encoding="UTF-8"?>
<launch>
	<param name="robot_description" command="$(find xacro)/xacro '$(find scarlet)/urdf/quicksilver.urdf.xacro'" />
    	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
	<node pkg="my_motor_controller" type="joy_to_twist.py" name="joy_to_twist" output="screen" />
        <node pkg="my_motor_controller" type="motor_driver_ros_interface.py" name="motor_driver" output="screen" />
        <node pkg="joy" type="joy_node" name="joy_node" output="screen" />
	<node name="gmapping" pkg="gmapping" type="slam_gmapping">
    		<rosparam file="$(find scarlet)/config/gmapping.yaml" command="load"/>
  	</node>
	<node pkg="scarlet" type="omniwheel.py" name="omniwheel_tf" />
	 <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
  	<param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
  	<param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
  	<!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
  	<param name="frame_id"            type="string" value="laser_frame"/>
  	<param name="inverted"            type="bool"   value="false"/>
  	<param name="angle_compensate"    type="bool"   value="true"/>
  	</node>

</launch>
